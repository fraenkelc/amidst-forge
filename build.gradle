buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
    }
}
plugins {
    id 'com.palantir.git-version' version '0.5.3'
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version gitVersion()
group = "net.lessqq.minecraft.amidstbridge" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "amidst-forge"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
ext {
    mc_version = '1.12.2'
    forge_version = '14.23.2.2611'
}

version = project.mc_version + '-' + gitVersion()

minecraft {
    version = project.mc_version + '-' + project.forge_version

    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

ext.sharedManifest = manifest {
    attributes('Implementation-Version': project.version)
}

configurations {
    jarIncludes
    shade {
        exclude group: 'io.netty', module: 'netty-codec-http2'
        exclude group: 'io.netty', module: 'netty-handler-proxy'
    }

    all {
        resolutionStrategy.force 'com.google.guava:guava:21.0', 'com.google.code.gson:gson:2.8.0'
    }
    compile {
        extendsFrom shade
    }
}

def embeddedJarDir = file("$buildDir/tmp/amidst-embed")

task copyAmidstJar(type: Sync) {
    group = "Build"
    from(configurations.jarIncludes).rename { "amidst-forge_amidst.jar" }
    destinationDir = embeddedJarDir
}

sourceSets.main.output.dir embeddedJarDir, builtBy: tasks["copyAmidstJar"]

jar {
    dependsOn configurations.shade
    from({
        (configurations.shade - configurations.forgeGradleMcDeps).collect { it.isDirectory() ? it : zipTree(it) }
    }) {
        exclude 'META-INF/MANIFEST.MF'
    }
    manifest {
        from sharedManifest
    }
    doFirst {
        manifest {
            attributes(
                    'Implementation-Version': project.version,
                    'FMLAT': sourceSets.main.resources.files.collect { it.getName() }.findAll {
                        it.endsWith("_at.cfg")
                    }.join(" ")
            )
        }
    }
}

/* // enable this to test with Integrated Dynamics
repositories {
    maven {
        name "Cyclops Repo"
        url "https://oss.jfrog.org/artifactory/simple/libs-release/"
    }
}
*/

dependencies {
    jarIncludes project(path: ':amidst', configuration: 'shadow')
    shade(project(':interface'))
    shade group: 'io.aeron', name: 'aeron-client', version: '1.21.1'
    shade group: 'io.aeron', name: 'aeron-driver', version: '1.21.1'
    compileOnly group: 'io.netty', name: 'netty-codec-http2', version: '4.1.9.Final'
    compileOnly group: 'io.netty', name: 'netty-handler-proxy', version: '4.1.9.Final'

    // enable these to test with Integrated Dynamics
    //compile "org.cyclops.integrateddynamics:IntegratedDynamics:1.12.2-0.11.0-1079:deobf"
    //compile "org.cyclops.commoncapabilities:CommonCapabilities:1.12.2-1.4.0-185:deobf"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    rename '(.+_at.cfg)', 'META-INF/$1'
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

project(':amidst') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        jcenter()
    }

    def props = new Properties()
    file('src/main/resources/amidst/metadata.properties').withInputStream { props.load(it) }
    version = "${props['amidst.version.major']}.${props['amidst.version.minor']}${props['amidst.version.preReleaseSuffix']?.trim() ? "-" + props['amidst.version.preReleaseSuffix']?.trim() : ''}"

    jar {
        manifest {
            attributes "Main-Class": "amidst.Amidst", "Amidst-Version": "$version"
        }
    }
    shadowJar {
        relocate 'org.jnbt', 'amidst.shadow.org.jnbt'
        relocate 'com.google.gson', 'amidst.shadow.com.google.gson'
        relocate 'org.kohsuke.args4j', 'amidst.shadow.org.kohsuke.args4j'
        relocate 'net.miginfocom', 'amidst.shadow.net.miginfocom'
    }

    dependencies {
        compile 'com.google.code.gson:gson:2.5'
        compile 'com.miglayout:miglayout-swing:4.2'
        compile 'args4j:args4j:2.32'
        compile files('lib/JNBT_1.3.jar')
        compile project(':interface')
	    compile group: 'io.aeron', name: 'aeron-client', version: '1.21.1'
        testCompile 'junit:junit:4.11'
    }
    compileJava {
        sourceCompatibility = targetCompatibility = '1.8'
    }

}